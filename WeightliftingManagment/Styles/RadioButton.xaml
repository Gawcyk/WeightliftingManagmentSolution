<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls">

    <Style x:Key="WLM.RadioButton.ThemeSelected" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.Focus}" />
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Panel.ZIndex" Value="0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <RotateTransform Angle="0" />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Controls:ClipBorder
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Controls:ClipBorder
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Controls:ClipBorder
                            x:Name="CheckedBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Viewbox
                                Margin="10"
                                ClipToBounds="True"
                                Stretch="Uniform">
                                <TextBlock
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="14"
                                    Text="&#xE8FB;" />
                            </Viewbox>
                        </Controls:ClipBorder>
                        <Controls:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="{TemplateBinding Controls:ControlsHelper.RecognizesAccessKey}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray1}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="CheckedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:1.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            FillBehavior="HoldEnd"
                                            Storyboard.TargetName="CheckedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray1}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
            <EventTrigger RoutedEvent="ButtonBase.Click">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[1].Angle">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="45" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-35" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="25" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-15" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="5" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <Int32Animation
                            FillBehavior="HoldEnd"
                            Storyboard.TargetProperty="(Panel.ZIndex)"
                            To="1000"
                            Duration="0:0:0.1" />
                        <DoubleAnimation
                            FillBehavior="HoldEnd"
                            Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleX"
                            To="1.3"
                            Duration="0:0:0.1" />
                        <DoubleAnimation
                            FillBehavior="HoldEnd"
                            Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleY"
                            To="1.3"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <Int32Animation
                            FillBehavior="HoldEnd"
                            Storyboard.TargetProperty="(Panel.ZIndex)"
                            To="0"
                            Duration="0:0:0.1" />
                        <DoubleAnimation
                            FillBehavior="HoldEnd"
                            Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleX"
                            To="1"
                            Duration="0:0:0.1" />
                        <DoubleAnimation
                            FillBehavior="HoldEnd"
                            Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleY"
                            To="1"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
